{"remainingRequest":"H:\\Vue js\\Web-based-Paint\\front-end-paint\\node_modules\\babel-loader\\lib\\index.js!H:\\Vue js\\Web-based-Paint\\front-end-paint\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!H:\\Vue js\\Web-based-Paint\\front-end-paint\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!H:\\Vue js\\Web-based-Paint\\front-end-paint\\src\\App.vue?vue&type=script&lang=js&","dependencies":[{"path":"H:\\Vue js\\Web-based-Paint\\front-end-paint\\src\\App.vue","mtime":1606488245290},{"path":"H:\\Vue js\\Web-based-Paint\\front-end-paint\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"H:\\Vue js\\Web-based-Paint\\front-end-paint\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"H:\\Vue js\\Web-based-Paint\\front-end-paint\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"H:\\Vue js\\Web-based-Paint\\front-end-paint\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["App.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div id=\"app\">\n    <div id=\"container\">\n    <canvas id=\"canvas\" width=\"400\" height=\"300\"  v-bind:style=\"{cursor: selectedCursor}\">\n    This text is displayed if your browser does not support HTML5 Canvas.\n    </canvas>\n    </div>\n  </div>\n</template>\n\n<style>\n#app {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n}\n\n#nav {\n  padding: 30px;\n}\n\n#nav a {\n  font-weight: bold;\n  color: #2c3e50;\n}\n\n#nav a.router-link-exact-active {\n  color: #42b983;\n}\n</style>\n<script>\nimport Rectangle from './models/Rectangle';\nexport default { \n  data() {\n        return {\n            shapes : [],\n            // Array to carry the selection handles (drag boxes) for each shape selection\n            selectionHandles: [],\n            // Hold canvas information\n            canvas: null,\n            ctx: null,\n            WIDTH: 0,\n            HEIGHT: 0,\n            // Interval at which the canvas is updated and redrawn again in milliseconds\n            INTERVAL: 20,\n            // Flags for current selection mode (drag the shape or resizing it)\n            isDrag: false,\n            isResizeDrag: false,\n            // The number of selection handle which the mouse is over it\n            expectResize: -1,\n            // Mouse Coordinates\n            mouse_x: 0, \n            mouse_y: 0,\n            // Redraw flag\n            // when set to true, the canvas will redraw everything\n            // invalidate() just sets this to false right now\n            // we want to call invalidate() whenever we make a change\n            canvasValid: false,\n            selectedShape: null,\n            // The following are the attributes of the selection border and corners\n            selectionColor: '#CC0000',\n            selectionWidth: 2,\n            selectionBoxColor: 'darkred', // New for selection boxes\n            selectionBoxSize: 6,\n            // Fake Canvas and CanvasContext \n            ghostcanvas: null,\n            gctx: null,\n            // since we can drag from anywhere in a node\n            // instead of just its x/y corner, we need to save\n            // the offset of the mouse when we start dragging.\n            offset_x: 0, \n            offset_y:0,\n            // Padding and border style widths for mouse offsets to maintain our calculations on click\n            stylePaddingLeft: 0, \n            stylePaddingTop: 0, \n            styleBorderLeft: 0, \n            styleBorderTop: 0,\n            selectedCursor: 'auto'\n        }\n    },\n    mounted() {\n      // Canvas initialization\n      this.canvas = document.getElementById('canvas');\n      this.HEIGHT = this.canvas.height;\n      this.WIDTH = this.canvas.width;\n      this.ctx = this.canvas.getContext('2d');\n      this.ghostcanvas = document.createElement('gcanvas');\n      this.ghostcanvas.height = this.HEIGHT;\n      this.ghostcanvas.width = this.WIDTH;\n      this.gctx = this.ghostcanvas.getContext('2d');\n      \n      //fixes a problem where double clicking causes text to get selected on the canvas\n      this.canvas.onselectstart = function () { return false; }\n      \n      // fixes mouse co-ordinate problems when there's a border or padding\n      // see getMouse for more detail\n      if (document.defaultView && document.defaultView.getComputedStyle) {\n        this.stylePaddingLeft = parseInt(document.defaultView.getComputedStyle(this.canvas, null)['paddingLeft'], 10)     || 0;\n        this.stylePaddingTop  = parseInt(document.defaultView.getComputedStyle(this.canvas, null)['paddingTop'], 10)      || 0;\n        this.styleBorderLeft  = parseInt(document.defaultView.getComputedStyle(this.canvas, null)['borderLeftWidth'], 10) || 0;\n        this.styleBorderTop   = parseInt(document.defaultView.getComputedStyle(this.canvas, null)['borderTopWidth'], 10)  || 0;\n      }\n      \n      // make mainDraw() fire every INTERVAL milliseconds\n      setInterval(this.mainDraw, this.INTERVAL);\n      \n      // set our events. Up and down are for dragging,\n      // double click is for making new boxes\n      this.canvas.onmousedown = this.mouseDown;\n      this.canvas.onmouseup = this.mouseUp;\n      this.canvas.ondblclick = this.addShape;\n      this.canvas.onmousemove = this.mouseMove;\n      \n      // set up the selection handle boxes\n      for (var i = 0; i < 8; i ++) {\n        var rect = new Rectangle;\n        this.selectionHandles.push(rect);\n      }\n      \n      // add custom initialization here:\n\n      \n      // add a large green rectangle\n      this.addRect(260, 70, 60, 65, 'rgba(0,205,0,0.7)');\n      \n      // add a green-blue rectangle\n      this.addRect(240, 120, 40, 40, 'rgba(2,165,165,0.7)');  \n      \n      // add a smaller purple rectangle\n      this.addRect(45, 60, 25, 25, 'rgba(150,150,250,0.7)');\n\n    },\n    methods: {\n        addRect(x, y, w, h, fill) {\n          var rect = new Rectangle;\n          rect.x = x;\n          rect.y = y;\n          rect.w = w\n          rect.h = h;\n          rect.fill = fill;\n          this.shapes.push(rect);\n          this.invalidate();\n      },\n      //wipes the canvas context\n      clear(c) {\n        c.clearRect(0, 0, this.WIDTH, this.HEIGHT);\n      },\n      // Main draw loop.\n      // While draw is called as often as the INTERVAL variable demands,\n      // It only ever does something if the canvas gets invalidated by our code\n      mainDraw() {\n        if (this.canvasValid == false) {\n          this.clear(this.ctx);\n          \n          // Add stuff you want drawn in the background all the time here\n          \n          // draw all boxes\n          var l = this.shapes.length;\n          for (var i = 0; i < l; i++) {\n            this.shapes[i].draw(this.ctx, this);\n          }\n          \n          // Add stuff you want drawn on top all the time here\n          \n          this.canvasValid = true;\n        }\n      },\n      // Happens when the mouse is moving inside the canvas\n      mouseMove(e){\n        if (this.isDrag) {\n          this.getMouse(e);\n          \n          this.selectedShape.x = this.mouse_x - this.offset_x;\n          this.selectedShape.y = this.mouse_y - this.offset_y;   \n          \n          // something is changing position so we better invalidate the canvas!\n          this.invalidate();\n        } else if (this.isResizeDrag) {\n          // time ro resize!\n          var oldx = this.selectedShape.x;\n          var oldy = this.selectedShape.y;\n          \n          // 0  1  2\n          // 3     4\n          // 5  6  7\n          switch (this.expectResize) {\n            case 0:\n              this.selectedShape.x = this.mouse_x;\n              this.selectedShape.y = this.mouse_y;\n              this.selectedShape.w += oldx - this.mouse_x;\n              this.selectedShape.h += oldy - this.mouse_y;\n              break;\n            case 1:\n              this.selectedShape.y = this.mouse_y;\n              this.selectedShape.h += oldy - this.mouse_y;\n              break;\n            case 2:\n              this.selectedShape.y = this.mouse_y;\n              this.selectedShape.w = this.mouse_x - oldx;\n              this.selectedShape.h += oldy - this.mouse_y;\n              break;\n            case 3:\n              this.selectedShape.x = this.mouse_x;\n              this.selectedShape.w += oldx - this.mouse_x;\n              break;\n            case 4:\n              this.selectedShape.w = this.mouse_x - oldx;\n              break;\n            case 5:\n              this.selectedShape.x = this.mouse_x;\n              this.selectedShape.w += oldx - this.mouse_x;\n              this.selectedShape.h = this.mouse_y - oldy;\n              break;\n            case 6:\n              this.selectedShape.h = this.mouse_y - oldy;\n              break;\n            case 7:\n              this.selectedShape.w = this.mouse_x - oldx;\n              this.selectedShape.h = this.mouse_y - oldy;\n              break;\n          }\n          \n          this.invalidate();\n        }\n        \n        this.getMouse(e);\n        // if there's a selection see if we grabbed one of the selection handles\n        if (this.selectedShape !== null && !this.isResizeDrag) {\n          for (var i = 0; i < 8; i++) {\n            // 0  1  2\n            // 3     4\n            // 5  6  7\n            \n            var cur = this.selectionHandles[i];\n            \n            // we dont need to use the ghost context because\n            // selection handles will always be rectangles\n            if (this.mouse_x >= cur.x && this.mouse_x <= cur.x + this.selectionBoxSize &&\n                this.mouse_y >= cur.y && this.mouse_y <= cur.y + this.selectionBoxSize) {\n              // we found one!\n              this.expectResize = i;\n              this.invalidate();\n              \n              switch (i) {\n                case 0:\n                  this.selectedCursor='nw-resize';\n                  break;\n                case 1:\n                  this.selectedCursor='n-resize';\n                  break;\n                case 2:\n                  this.selectedCursor='ne-resize';\n                  break;\n                case 3:\n                  this.selectedCursor='w-resize';\n                  break;\n                case 4:\n                  this.selectedCursor='e-resize';\n                  break;\n                case 5:\n                  this.selectedCursor='sw-resize';\n                  break;\n                case 6:\n                  this.selectedCursor='s-resize';\n                  break;\n                case 7:\n                  this.selectedCursor='se-resize';\n                  break;\n              }\n              return;\n            }\n            \n          }\n          // not over a selection box, return to normal\n          this.isResizeDrag = false;\n          this.expectResize = -1;\n          this.selectedCursor='auto';\n        }\n        \n      },\n      // Happens when the mouse is clicked in the canvas\n      mouseDown(e){\n        this.getMouse(e);\n        \n        //we are over a selection box\n        if (this.expectResize !== -1) {\n          this.isResizeDrag = true;\n          return;\n        }\n        \n        this.clear(this.gctx);\n        var l = this.shapes.length;\n        for (var i = l-1; i >= 0; i--) {\n          // draw shape onto ghost context\n          this.shapes[i].draw(this.gctx, 'black');\n          \n          // get image data at the mouse x,y pixel\n          var imageData = this.gctx.getImageData(this.mouse_x, this.mouse_y, 1, 1);\n          \n          // if the mouse pixel exists, select and break\n          if (imageData.data[3] > 0) {\n            this.selectedShape = this.shapes[i];\n            this.offset_x = this.mouse_x - this.selectedShape.x;\n            this.offset_y = this.mouse_y - this.selectedShape.y;\n            this.selectedShape.x = this.mouse_x - this.offset_x;\n            this.selectedShape.y = this.mouse_y - this.offset_y;\n            this.isDrag = true;\n            \n            this.invalidate();\n            this.clear(this.gctx);\n            return;\n          }\n          \n        }\n        // havent returned means we have selected nothing\n        this.selectedShape = null;\n        // clear the ghost canvas for next time\n        this.clear(this.gctx);\n        // invalidate because we might need the selection border to disappear\n        this.invalidate();\n      },\n      mouseUp(){\n        this.isDrag = false;\n        this.isResizeDrag = false;\n        this.expectResize = -1;\n      },\n      addShape(e) {\n        this.getMouse(e);\n        // Default size\n        var width = 20;\n        var height = 20;\n        this.addRect(this.mouse_x - (width / 2), this.mouse_y - (height / 2), width, height, 'rgba(220,205,65,0.7)');\n      },\n      invalidate() {\n        this.canvasValid = false;\n      },\n      // Sets mouse_x,mouse_y to the mouse position relative to the canvas\n      // unfortunately this can be tricky, we have to worry about padding and borders\n      getMouse(e) {\n            var element = this.canvas, offsetX = 0, offsetY = 0;\n\n            if (element.offsetParent) {\n              do {\n                offsetX += element.offsetLeft;\n                offsetY += element.offsetTop;\n              } while ((element = element.offsetParent));\n            }\n\n            // Add padding and border style widths to offset\n            offsetX += this.stylePaddingLeft;\n            offsetY += this.stylePaddingTop;\n\n            offsetX += this.styleBorderLeft;\n            offsetY += this.styleBorderTop;\n\n            this.mouse_x = e.pageX - offsetX;\n            this.mouse_y = e.pageY - offsetY\n      }\n    }\n}\n</script>"],"sourceRoot":"src"}]}